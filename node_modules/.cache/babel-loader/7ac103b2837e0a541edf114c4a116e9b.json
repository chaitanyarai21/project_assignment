{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\chait\\\\Desktop\\\\codee\\\\bubbles-map\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { MapContainer, CircleMarker, TileLayer, Tooltip } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport data from './cities';\nimport country_data from './countrycode';\n\nclass App extends Component {\n  render() {\n    var centerLat = (data.minLat + data.maxLat) / 2;\n    var distanceLat = data.maxLat - data.minLat;\n    var bufferLat = distanceLat * 0.05;\n    var centerLong = (data.minLong + data.maxLong) / 2;\n    var distanceLong = data.maxLong - data.minLong;\n    var bufferLong = distanceLong * 0.15;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Most Populous Cities in Asia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        style: {\n          height: \"480px\",\n          width: \"100%\"\n        },\n        zoom: 1,\n        center: [centerLat, centerLong],\n        bounds: [[data.minLat - bufferLat, data.minLong - bufferLong], [data.maxLat + bufferLat, data.maxLong + bufferLong]],\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), data.city.map((city, k) => {\n          return /*#__PURE__*/_jsxDEV(CircleMarker, {\n            center: country_data.country[city[\"region\"]],\n            radius: 20 * Math.log(city[\"data\"] / 10000000),\n            fillOpacity: 0.5,\n            stroke: false\n          }, k, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/chait/Desktop/codee/bubbles-map/src/App.js"],"names":["React","Component","MapContainer","CircleMarker","TileLayer","Tooltip","data","country_data","App","render","centerLat","minLat","maxLat","distanceLat","bufferLat","centerLong","minLong","maxLong","distanceLong","bufferLong","textAlign","height","width","city","map","k","country","Math","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,SAArC,EAA+CC,OAA/C,QAA8D,eAA9D;AACA,OAAO,0BAAP;AACA,OAAOC,IAAP,MAAiB,UAAjB;AACA,OAAOC,YAAP,MAA0B,eAA1B;;AAKA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAE1BQ,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,CAACJ,IAAI,CAACK,MAAL,GAAcL,IAAI,CAACM,MAApB,IAA8B,CAA9C;AACA,QAAIC,WAAW,GAAGP,IAAI,CAACM,MAAL,GAAcN,IAAI,CAACK,MAArC;AACA,QAAIG,SAAS,GAAGD,WAAW,GAAG,IAA9B;AACA,QAAIE,UAAU,GAAG,CAACT,IAAI,CAACU,OAAL,GAAeV,IAAI,CAACW,OAArB,IAAgC,CAAjD;AACA,QAAIC,YAAY,GAAGZ,IAAI,CAACW,OAAL,GAAeX,IAAI,CAACU,OAAvC;AACA,QAAIG,UAAU,GAAGD,YAAY,GAAG,IAAhC;AACA,wBACE;AAAA,8BACE;AAAI,QAAA,KAAK,EAAE;AAAEE,UAAAA,SAAS,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SADT;AAEE,QAAA,IAAI,EAAE,CAFR;AAGE,QAAA,MAAM,EAAE,CAACZ,SAAD,EAAYK,UAAZ,CAHV;AAIE,QAAA,MAAM,EAAE,CACN,CAACT,IAAI,CAACK,MAAL,GAAcG,SAAf,EAA0BR,IAAI,CAACU,OAAL,GAAeG,UAAzC,CADM,EAEN,CAACb,IAAI,CAACM,MAAL,GAAcE,SAAf,EAA0BR,IAAI,CAACW,OAAL,GAAeE,UAAzC,CAFM,CAJV;AAAA,gCASE,QAAC,SAAD;AAAW,UAAA,GAAG,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBATF,EAWGb,IAAI,CAACiB,IAAL,CAAUC,GAAV,CAAc,CAACD,IAAD,EAAOE,CAAP,KAAa;AAC1B,8BACE,QAAC,YAAD;AAEA,YAAA,MAAM,EAAElB,YAAY,CAACmB,OAAb,CAAqBH,IAAI,CAAC,QAAD,CAAzB,CAFR;AAGA,YAAA,MAAM,EAAE,KAAKI,IAAI,CAACC,GAAL,CAASL,IAAI,CAAC,MAAD,CAAJ,GAAe,QAAxB,CAHb;AAIA,YAAA,WAAW,EAAE,GAJb;AAKA,YAAA,MAAM,EAAE;AALR,aACKE,CADL;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAXA,CAXH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;;AAvCyB;;AA0C5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { MapContainer, CircleMarker, TileLayer,Tooltip } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport data from './cities'\nimport country_data from  './countrycode';\n\n\n\n\nclass App extends Component {\n\n  render() {\n    var centerLat = (data.minLat + data.maxLat) / 2;\n    var distanceLat = data.maxLat - data.minLat;\n    var bufferLat = distanceLat * 0.05;\n    var centerLong = (data.minLong + data.maxLong) / 2;\n    var distanceLong = data.maxLong - data.minLong;\n    var bufferLong = distanceLong * 0.15;\n    return (\n      <div>\n        <h3 style={{ textAlign: \"center\" }}>Most Populous Cities in Asia</h3>\n        <MapContainer\n          style={{ height: \"480px\", width: \"100%\" }}\n          zoom={1}\n          center={[centerLat, centerLong]}\n          bounds={[\n            [data.minLat - bufferLat, data.minLong - bufferLong],\n            [data.maxLat + bufferLat, data.maxLong + bufferLong]\n          ]}\n        >\n          <TileLayer url=\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n\n          {data.city.map((city, k) => {\n            return (\n              <CircleMarker\n              key={k}\n              center={country_data.country[city[\"region\"]]}\n              radius={20 * Math.log(city[\"data\"] / 10000000)}\n              fillOpacity={0.5}\n              stroke={false}\n            >\n              \n            </CircleMarker>)\n          })\n          }\n        </MapContainer>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}