{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\chait\\\\Desktop\\\\codee\\\\bubbles-map\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { MapContainer, CircleMarker, TileLayer, Tooltip } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport data from './cities';\nimport country_code from './countrycode';\nconsole.log(parseFloat(country_code.country[\"yt\"][0]));\n\nclass App extends Component {\n  render() {\n    var centerLat = (data.minLat + data.maxLat) / 2;\n    var distanceLat = data.maxLat - data.minLat;\n    var bufferLat = distanceLat * 0.05;\n    var centerLong = (data.minLong + data.maxLong) / 2;\n    var distanceLong = data.maxLong - data.minLong;\n    var bufferLong = distanceLong * 0.05;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Most Populous Cities in Asia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        style: {\n          height: \"480px\",\n          width: \"100%\"\n        },\n        zoom: 1,\n        center: [centerLat, centerLong],\n        bounds: [[data.minLat - bufferLat, data.minLong - bufferLong], [data.maxLat + bufferLat, data.maxLong + bufferLong]],\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), data.city.map((city, k) => {\n          return /*#__PURE__*/_jsxDEV(CircleMarker, {\n            center: [city[\"coordinates\"][1], city[\"coordinates\"][0]],\n            radius: 20 * Math.log(city[\"population\"] / 10000000),\n            fillOpacity: 0.5,\n            stroke: false,\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              direction: \"right\",\n              offset: [-8, -2],\n              opacity: 1,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: city[\"name\"] + \": \" + \"Population\" + \" \" + city[\"population\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, k, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/chait/Desktop/codee/bubbles-map/src/App.js"],"names":["React","Component","MapContainer","CircleMarker","TileLayer","Tooltip","data","country_code","console","log","parseFloat","country","App","render","centerLat","minLat","maxLat","distanceLat","bufferLat","centerLong","minLong","maxLong","distanceLong","bufferLong","textAlign","height","width","city","map","k","Math"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,SAArC,EAAgDC,OAAhD,QAA+D,eAA/D;AACA,OAAO,0BAAP;AACA,OAAOC,IAAP,MAAiB,UAAjB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACAC,OAAO,CAACC,GAAR,CAAYC,UAAU,CAACH,YAAY,CAACI,OAAb,CAAqB,IAArB,EAA2B,CAA3B,CAAD,CAAtB;;AACA,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AAE1BY,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,CAACR,IAAI,CAACS,MAAL,GAAcT,IAAI,CAACU,MAApB,IAA8B,CAA9C;AACA,QAAIC,WAAW,GAAGX,IAAI,CAACU,MAAL,GAAcV,IAAI,CAACS,MAArC;AACA,QAAIG,SAAS,GAAGD,WAAW,GAAG,IAA9B;AACA,QAAIE,UAAU,GAAG,CAACb,IAAI,CAACc,OAAL,GAAed,IAAI,CAACe,OAArB,IAAgC,CAAjD;AACA,QAAIC,YAAY,GAAGhB,IAAI,CAACe,OAAL,GAAef,IAAI,CAACc,OAAvC;AACA,QAAIG,UAAU,GAAGD,YAAY,GAAG,IAAhC;AACA,wBACE;AAAA,8BACE;AAAI,QAAA,KAAK,EAAE;AAAEE,UAAAA,SAAS,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SADT;AAEE,QAAA,IAAI,EAAE,CAFR;AAGE,QAAA,MAAM,EAAE,CAACZ,SAAD,EAAYK,UAAZ,CAHV;AAIE,QAAA,MAAM,EAAE,CACN,CAACb,IAAI,CAACS,MAAL,GAAcG,SAAf,EAA0BZ,IAAI,CAACc,OAAL,GAAeG,UAAzC,CADM,EAEN,CAACjB,IAAI,CAACU,MAAL,GAAcE,SAAf,EAA0BZ,IAAI,CAACe,OAAL,GAAeE,UAAzC,CAFM,CAJV;AAAA,gCASE,QAAC,SAAD;AAAW,UAAA,GAAG,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBATF,EAWGjB,IAAI,CAACqB,IAAL,CAAUC,GAAV,CAAc,CAACD,IAAD,EAAOE,CAAP,KAAa;AAC1B,8BACE,QAAC,YAAD;AAEE,YAAA,MAAM,EAAE,CAACF,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,CAAD,EAAyBA,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,CAAzB,CAFV;AAGE,YAAA,MAAM,EAAE,KAAKG,IAAI,CAACrB,GAAL,CAASkB,IAAI,CAAC,YAAD,CAAJ,GAAqB,QAA9B,CAHf;AAIE,YAAA,WAAW,EAAE,GAJf;AAKE,YAAA,MAAM,EAAE,KALV;AAAA,mCAOE,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC,OAAnB;AAA2B,cAAA,MAAM,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAnC;AAA6C,cAAA,OAAO,EAAE,CAAtD;AAAA,qCACE;AAAA,0BAAOA,IAAI,CAAC,MAAD,CAAJ,GAAe,IAAf,GAAsB,YAAtB,GAAqC,GAArC,GAA2CA,IAAI,CAAC,YAAD;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF,aACOE,CADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAYD,SAbA,CAXH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AAzCyB;;AA4C5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { MapContainer, CircleMarker, TileLayer, Tooltip } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport data from './cities'\nimport country_code from './countrycode'\nconsole.log(parseFloat(country_code.country[\"yt\"][0]));\nclass App extends Component {\n\n  render() {\n    var centerLat = (data.minLat + data.maxLat) / 2;\n    var distanceLat = data.maxLat - data.minLat;\n    var bufferLat = distanceLat * 0.05;\n    var centerLong = (data.minLong + data.maxLong) / 2;\n    var distanceLong = data.maxLong - data.minLong;\n    var bufferLong = distanceLong * 0.05;\n    return (\n      <div>\n        <h3 style={{ textAlign: \"center\" }}>Most Populous Cities in Asia</h3>\n        <MapContainer\n          style={{ height: \"480px\", width: \"100%\" }}\n          zoom={1}\n          center={[centerLat, centerLong]}\n          bounds={[\n            [data.minLat - bufferLat, data.minLong - bufferLong],\n            [data.maxLat + bufferLat, data.maxLong + bufferLong]\n          ]}\n        >\n          <TileLayer url=\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n\n          {data.city.map((city, k) => {\n            return (\n              <CircleMarker\n                key={k}\n                center={[city[\"coordinates\"][1], city[\"coordinates\"][0]]}\n                radius={20 * Math.log(city[\"population\"] / 10000000)}\n                fillOpacity={0.5}\n                stroke={false}\n              >\n                <Tooltip direction=\"right\" offset={[-8, -2]} opacity={1}>\n                  <span>{city[\"name\"] + \": \" + \"Population\" + \" \" + city[\"population\"]}</span>\n                </Tooltip>\n              </CircleMarker>)\n          })\n          }\n        </MapContainer>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}